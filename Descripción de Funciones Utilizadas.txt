Descripción de Funciones Utilizadas

•	busqueda_lineal(lista, x):
o	Propósito: Implementa el algoritmo de búsqueda lineal.
o	Parámetros: lista (la lista en la que se buscará) y x (el valor a encontrar).
o	Retorno: Devuelve el índice del valor si se encuentra, de lo contrario, devuelve -1.

•	busqueda_binaria(lista, x):
o	Propósito: Implementa el algoritmo de búsqueda binaria.
o	Parámetros: lista (una lista ordenada) y x (el valor a encontrar).
o	Retorno: Devuelve el índice del valor si se encuentra, de lo contrario, devuelve -1.

•	generar_lista(tamaño):
o	Propósito: Crea una lista de números enteros aleatorios y la ordena.
o	Parámetros: tamaño (el número de elementos en la lista).
o	Retorno: Una lista ordenada.

•	medir_tiempo(funcion, lista, valor, repeticiones=5):
o	Propósito: Mide el tiempo promedio de ejecución de un algoritmo.
o	Parámetros: funcion: El algoritmo a evaluar (p. ej., busqueda_lineal).
	lista: La lista de datos.
	valor: El valor a buscar.
	repeticiones: El número de veces que se ejecuta el algoritmo para calcular el promedio (por defecto 5).
o	Retorno: El tiempo promedio de ejecución en milisegundos.

•	BusquedaGUI:
o	Propósito: Clase principal que gestiona la interfaz gráfica, permitiendo al usuario generar datos, realizar búsquedas y visualizar los resultados.


o	Métodos clave:
	setup_gui(): Configura todos los widgets de la interfaz.
	generar_datos(): Llama a generar_lista para crear un nuevo conjunto de datos.
	buscar_lineal() y buscar_binaria(): Llevan a cabo las búsquedas y muestran los resultados.
	actualizar_grafica(): Genera y actualiza el gráfico de rendimiento para ambos algoritmos en los diferentes tamaños de lista.
